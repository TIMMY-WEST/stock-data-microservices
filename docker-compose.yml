version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: stock_postgres
    environment:
      POSTGRES_DB: stock_db
      POSTGRES_USER: stock_user
      POSTGRES_PASSWORD: stock_password
      TZ: Asia/Tokyo
      PGTZ: Asia/Tokyo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stock_user -d stock_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - stock_network

  # Redis for caching and task queuing
  redis:
    image: redis:7-alpine
    container_name: stock_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes
    networks:
      - stock_network

  # 将来のアプリケーションコンテナ用（開発時はコメントアウト）
  # app:
  #   build: .
  #   container_name: stock_app
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     DATABASE_URL: postgresql://stock_user:stock_password@postgres:5432/stock_db
  #     REDIS_URL: redis://redis:6379/0
  #     FLASK_ENV: production
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - stock_network

networks:
  stock_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local